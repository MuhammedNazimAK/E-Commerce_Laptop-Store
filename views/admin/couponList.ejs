<%- include('../partials/admin/header') %>
<%- include('../partials/admin/search') %>

<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Coupons List</h2>
            <p>Manage your coupon inventory</p>
        </div>
        <div>
            <a href="coupon-management" class="btn btn-primary btn-sm rounded">Create new</a>
        </div>
    </div>
    <div class="card mb-4">
        <div class="card-body">
            <% if (couponsData && couponsData.length > 0) { %>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Coupon Name</th>
                            <th>Code</th>
                            <th>Discount</th>
                            <th>Min Amount</th>
                            <th>Max Amount</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id="couponsTableBody">
                        <% couponsData.forEach(coupon => { %>
                            <tr id="coupon-<%= coupon._id %>">
                                <td><%= coupon.name %></td>
                                <td><%= coupon.code %></td>
                                <td><%= coupon.discountPercentage %>%</td>
                                <td>₹<%= coupon.minPurchaseAmount %></td>
                                <td>₹<%= coupon.maxDiscountAmount %></td>
                                <td>
                                    <span class="badge rounded-pill <%= coupon.isActive ? 'bg-success' : 'bg-danger' %>">
                                        <%= coupon.isActive ? 'Active' : 'Inactive' %>
                                    </span>
                                </td>
                                <td class="text-end">
                                    <button type="button" class="btn btn-sm btn-info me-2" data-bs-toggle="modal" data-bs-target="#couponModal<%= coupon._id %>">
                                        <i class="material-icons md-info"></i> View Details
                                    </button>
                                    <a href="#" onclick="toggleCouponStatus(event, '<%= coupon._id %>', this)" class="btn btn-sm btn-light me-2">
                                      <i class="material-icons md-power_settings_new"></i> <%= coupon.isActive ? 'Deactivate' : 'Activate' %>
                                  </a>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="deleteCoupon('<%= coupon._id %>')">
                                        <i class="material-icons md-delete"></i> Delete
                                    </button>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            <% } else { %>
                <p>No coupons found.</p>
            <% } %>
        </div>
    </div>
</section>


        <!-- Pagination -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                <% if (currentPage > 1) { %>
                    <li class="page-item">
                        <a class="page-link" href="/admin/coupons?page=<%= currentPage - 1 %>" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                <% } %>
                
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                        <a class="page-link" href="/admin/coupons?page=<%= i %>"><%= i %></a>
                    </li>
                <% } %>
                
                <% if (currentPage < totalPages) { %>
                    <li class="page-item">
                        <a class="page-link" href="/admin/coupons?page=<%= currentPage + 1 %>" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                <% } %>
            </ul>
        </nav>


<!-- Coupon Details Modal -->
<% couponsData.forEach(coupon => { %>
    <div class="modal fade" id="couponModal<%= coupon._id %>" tabindex="-1" aria-labelledby="couponModalLabel<%= coupon._id %>" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="couponModalLabel<%= coupon._id %>"><%= coupon.name %></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Code:</strong> <%= coupon.code %></p>
                    <p><strong>Discount:</strong> <%= coupon.discountPercentage %>%</p>
                    <p><strong>Min Purchase Amount:</strong> ₹<%= coupon.minPurchaseAmount %></p>
                    <p><strong>Max Discount Amount:</strong> ₹<%= coupon.maxDiscountAmount %></p>
                    <p><strong>Status:</strong> <%= coupon.isActive ? 'Active' : 'Inactive' %></p>
                    <p><strong>Created At:</strong> <%= new Date(coupon.createdAt).toLocaleDateString() %></p>
                    <p><strong>Description:</strong> <%= coupon.description || 'No description available' %></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
<% }) %>

<%- include('../partials/admin/footer') %>

<script>
    const toggleCouponStatus = async (event, couponId, toggleButton) => {
        event.preventDefault();

        const isActivating = toggleButton.textContent.trim() === 'Activate';

        try {
            const result = await Swal.fire({
                title: `Are you sure you want to ${isActivating ? 'activate' : 'deactivate'} this coupon?`,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: `Yes, ${isActivating ? 'activate' : 'deactivate'}`
            });

            if (result.isConfirmed) {
                const response = await axios.patch('/admin/coupon-management', { couponId });

                if (response.data.success) {
                    // Update UI
                    const statusBadge = toggleButton.closest('tr').querySelector('.badge');
                    if (isActivating) {
                        toggleButton.innerHTML = '<i class="material-icons md-power_settings_new"></i> Deactivate';
                        statusBadge.textContent = 'Active';
                        statusBadge.classList.remove('bg-danger');
                        statusBadge.classList.add('bg-success');
                    } else {
                        toggleButton.innerHTML = '<i class="material-icons md-power_settings_new"></i> Activate';
                        statusBadge.textContent = 'Inactive';
                        statusBadge.classList.remove('bg-success');
                        statusBadge.classList.add('bg-danger');
                    }
                    Swal.fire({
                        title: "Updated!",
                        text: `Coupon ${isActivating ? 'activated' : 'deactivated'} successfully`,
                        icon: "success",
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                    });
                } else {
                    throw new Error(response.data.message);
                }
            }
        } catch (error) {
            console.error(`There is a problem with the operation: ${error}`);
            Swal.fire({
                title: "Error!",
                text: "There was a problem updating the coupon.",
                icon: "error",
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
            });
        }
    };

    const deleteCoupon = async (couponId) => {
        try {
            const result = await Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            });

            if (result.isConfirmed) {
                const response = await axios.delete(`/admin/coupon/${couponId}`);

                if (response.data.success) {
                    // Remove the deleted coupon from the table
                    const couponRow = document.getElementById(`coupon-${couponId}`);
                    if (couponRow) {
                        couponRow.remove();
                    }

                    Swal.fire({
                        title: "Deleted!",
                        text: "Coupon has been deleted.",
                        icon: "success",
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                    });
                } else {
                    throw new Error(response.data.message);
                }
            }
        } catch (error) {
            console.error(`Error deleting coupon: ${error}`);
            Swal.fire({
                title: "Error!",
                text: "There was a problem deleting the coupon.",
                icon: "error",
                toast: true,
                position: "top-end",
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
            });
        }
    };
</script>
